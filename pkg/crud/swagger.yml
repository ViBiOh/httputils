---

openapi: 3.0.0
info:
  description: Replace "Item" with name of your ressource
  title: Crud example
  version: '1.0.0'

paths:
  /crud:
    get:
      description: List Items with pagination
      parameters:
        - name: page
          in: query
          description: Page of list
          default: 1
          schema:
            type: integer
            format: int64
        - name: pageSize
          in: query
          description: Page size of list
          default: 20
          schema:
            type: integer
            format: int64
        - name: sort
          in: query
          description: Sort key of list
          schema:
            type: string
        - name: desc
          in: query
          description: Sort by descending order
          schema:
            type: boolean

      responses:
        '200':
          description: Paginated list of Items
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                    format: int64
                    description: Page of list
                  pageSize:
                    type: integer
                    format: int64
                    description: Pagesize of list
                  pageCount:
                    type: integer
                    format: int64
                    description: Number of pages
                  total:
                    type: integer
                    format: int64
                    description: Total count of Items
                  results:
                    $ref: '#/components/schemas/Items'

        '400':
          $ref: '#/components/schemas/Error'

        '416':
          description: No more data for pagination

        '500':
          $ref: '#/components/schemas/Error'

    options:
      description: Show crud headers

      responses:
        '204':
          description: Headers for Items

    post:
      description: Create a Item
      requestBody:
        description: Item to create
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Item's name

      responses:
        '201':
          description: Item created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'

        '400':
          $ref: '#/components/schemas/Error'

        '500':
          $ref: '#/components/schemas/Error'

  /crud/{id}:
    parameters:
      - name: id
        in: path
        description: Item's ID
        required: true
        schema:
          type: string

    get:
      description: Retrieve a Item

      responses:
        '200':
          description: Item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'

        '404':
          $ref: '#/components/schemas/Error'

        '500':
          $ref: '#/components/schemas/Error'

    options:
      description: Show crud headers

      responses:
        '204':
          description: Headers for Items

    put:
      description: Update a Item
      requestBody:
        description: Item data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'

      responses:
        '200':
          description: Item updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'

        '400':
          $ref: '#/components/schemas/Error'

        '404':
          $ref: '#/components/schemas/Error'

        '500':
          $ref: '#/components/schemas/Error'

    delete:
      description: Delete a Item

      responses:
        '204':
          description: Item deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'

        '404':
          description: Item not found
          content:
            text/plain:
              schema:
                type: string

        '500':
          $ref: '#/components/schemas/Error'

components:
  schemas:
    Item:
      type: object
      properties:
        id:
          type: string
          description: Item's identifier

    Items:
      type: array
      items:
        $ref: '#/components/schemas/Item'

    Error:
      description: Error
      content:
        text/plain:
          schema:
            type: string
