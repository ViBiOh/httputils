---
name: Build

permissions:
  actions: none
  checks: none
  contents: read
  deployments: none
  issues: none
  packages: none
  pages: none
  pull-requests: none
  repository-projects: none
  security-events: none

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  SCRIPTS_NO_INTERACTIVE: "true"

defaults:
  run:
    shell: bash

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Golang
        uses: actions/setup-go@v4
        with:
          go-version: "^1.21"
          cache: true

      - name: Build
        run: |
          make
          git --no-pager diff -- ':(exclude)go.sum' && git diff --quiet -- ':(exclude)go.sum'
      - name: Codecov
        uses: codecov/codecov-action@v3

  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    if: ${{ secrets.SONAR_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: SonarCloud
        uses: SonarSource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  package:
    name: Docker
    runs-on: ubuntu-latest
    env:
      DOCKER_USER: ${{ secrets.DOCKER_USER }}
      DOCKER_PASS: ${{ secrets.DOCKER_PASS }}
    if: ${{ secrets.DOCKER_USER }} && ${{ secrets.DOCKER_PASS }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Golang
        uses: actions/setup-go@v4
        with:
          go-version: "^1.21"
          cache: true
      - name: Build
        env:
          GO_ARCHS: linux/amd64 linux/arm linux/arm64 darwin/amd64 darwin/arm64
        run: |
          curl --disable --silent --show-error --location --max-time 30 "https://raw.githubusercontent.com/ViBiOh/scripts/main/bootstrap" | bash -s -- "-c" "release"
          DOCKER_IMAGE="${{ secrets.DOCKER_USER }}/scratch" IMAGE_VERSION="$(make version)" ./scripts/release build
      - name: Setup Docker
        uses: docker/setup-buildx-action@v2
      - name: Setup DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}
      - name: Docker
        run: |
          DOCKER_IMAGE="${{ secrets.DOCKER_USER }}/scratch" IMAGE_VERSION="$(make version)" ./scripts/release docker

  publish:
    name: Publish
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: package
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Publish
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASS: ${{ secrets.DOCKER_PASS }}
        run: |
          curl --disable --silent --show-error --location --max-time 30 "https://raw.githubusercontent.com/ViBiOh/scripts/main/bootstrap" | bash -s -- "-c" "docker_promote"
          scripts/docker_promote "${{ secrets.DOCKER_USER }}/scratch" "$(make version)"
